#####BTT SKR E3 Turbo####
#####LPC1769 120 MHZ####
#####GPIO pins in Menuconfig !P3.26, !P3.25, !P1.18, !P1.19 #####
#####Standby Pins X:3.26 Y:3.25 Z:1.18 E0:1.19 E1:2.13 #####

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.
#[include kiauh.cfg]


#######################################################################
#######################  ENDER 6 W/ SKR E3 Turbo  #####################
#######################################################################

[printer]
kinematics: corexy
max_velocity: 800
max_accel: 3500
max_accel_to_decel: 3500
max_z_velocity: 10
max_z_accel: 100
square_corner_velocity: 7

######################################################################
######################################################################

[stepper_x]
step_pin: P1.4
dir_pin: !P1.8
enable_pin: !P1.0
#step_distance: .0125
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400   #   The number of full steps for one rotation of the stepper motor.200 = 1.8*, 400 = 0.9*
#endstop_pin: tmc2209_stepper_x:virtual_endstop
#homing_retract_dist: 0
endstop_pin: ^P1.29
position_endstop: 260
homing_retract_dist: 5.0
position_min: 0
position_max: 260
homing_speed: 75

[tmc2209 stepper_x]
uart_pin: P1.1
#diag_pin: P1.29     # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 255  # 255 is most sensitive value, 0 is least sensitive
run_current: 1.0     # The amount of current (in amps RMS) to configure the driver to use during stepper movement. This parameter must be provided.
hold_current: 0.800
#stealthchop_threshold: 999999

[stepper_y]
step_pin: P1.14
dir_pin: P1.15
enable_pin: !P1.9
#step_distance: .0125
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 400   #   The number of full steps for one rotation of the stepper motor.200 = 1.8*, 400 = 0.9*
endstop_pin: ^P1.28
#endstop_pin: tmc2209_stepper_y:virtual_endstop
#homing_retract_dist: 0
position_endstop: 260
homing_retract_dist: 5.0
position_min: 0
position_max: 260
homing_speed: 75

[tmc2209 stepper_y]
uart_pin: P1.10
#diag_pin: P1.28     # Set to MCU pin connected to TMC DIAG pin
#driver_SGTHRS: 255  # 255 is most sensitive value, 0 is least sensitive
run_current: 1.0     # The amount of current (in amps RMS) to configure the driver to use during stepper movement. This parameter must be provided.
hold_current: 0.800
#stealthchop_threshold: 999999

[stepper_z]
step_pin: P4.29
dir_pin: !P4.28
enable_pin: !P1.16
#step_distance: 
microsteps: 16
rotation_distance: 8
#position_endstop: 0.0                       # disable to use BLTouch
#endstop_pin: ^P1.27                         # disable to use BLTouch
endstop_pin: probe:z_virtual_endstop         # enable to use BLTouch
position_min: -5                             # enable to use BLTouch
position_max: 400

[tmc2209 stepper_z]
uart_pin: P1.17
diag_pin: P1.27
#microsteps: 16
run_current: 0.800
hold_current: 0.800
#stealthchop_threshold: 999999

[extruder]
step_pin: P2.6
dir_pin: P2.7
enable_pin: !P0.4
microsteps: 16
rotation_distance: 7.865060241  # For DDX v3
nozzle_diameter: 0.600
filament_diameter: 1.750
max_extrude_cross_section: 25
instantaneous_corner_velocity: 1.000
max_extrude_only_distance: 1000.0
max_extrude_only_velocity: 75
max_extrude_only_accel: 2000
pressure_advance = 0.06
pressure_advance_smooth_time: 0.040
heater_pin: P2.3
max_power: 1.0
sensor_type: NTC 100K beta 3950
sensor_pin: P0.24
pullup_resistor: 4700
smooth_time: 1.0
pid_Kp: 21.028
pid_Ki: 0.830
pid_Kd: 133.266
min_temp: 0
max_temp: 260
min_extrude_temp: 170

[tmc2209 extruder]
uart_pin: P0.5
#diag_pin: P1.26
run_current: 0.800
hold_current: 0.500
#stealthchop_threshold: 999999

#[extruder1]
#step_pin: P2.11
#dir_pin: P2.12
#enable_pin: !P0.21
#heater_pin: P2.4
#sensor_pin: P0.23
#control: pid
#pid_Kp: 21.028
#pid_Ki: 0.830
#pid_Kd: 133.266
#min_temp: 0
#max_temp: 300

#[tmc2209 extruder1]
#uart_pin: P0.22
##diag_pin: P1.25
#run_current: 0.650
#hold_current: 0.500
#stealthchop_threshold: 999999

########################################################################################

[safe_z_home]                           # enable for BLTouch
home_xy_position: 130, 120
speed: 150
z_hop: 12                               # Move up 12mm
z_hop_speed: 5

[bltouch]                               # enable for BLTouch
sensor_pin: P1.27
control_pin: P1.23
pin_move_time: 0.680
stow_on_each_sample: False
probe_with_touch_mode: True
pin_up_reports_not_triggered: True
pin_up_touch_mode_reports_triggered: True
x_offset: -27.625
y_offset: -7
#z_offset: 2.84
speed: 3.0

[bed_mesh]                              # enable for BLTouch
speed: 150
horizontal_move_z: 7
mesh_min: 30, 10
mesh_max: 255, 255
algorithm: bicubic
probe_count: 3, 3
#move_check_distance: 5
#split_delta_z: .025
relative_reference_index: 5
fade_start: 1
fade_end: 10
fade_target: 0
mesh_pps: 2, 2

[bed_screws]
screw1: 60,35
screw2: 60,230
screw3: 255,35
screw4: 255,230

[screws_tilt_adjust]
screw1: 60,35
screw1_name: FRONT LEFT SCREW
screw2: 60,230
screw2_name: BACK LEFT SCREW
screw3: 255,35
screw3_name: FRONT RIGHT SCREW
screw4: 255,230
screw4_name: BACK RIGHT SCREW

#####################################################################################

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
#control: pid
#pid_Kp: 65.662
#pid_Ki: 0.705
#pid_Kd: 1529.100
min_temp: 0
max_temp: 110

[fan]
pin: P2.1

[heater_fan nozzle_cooling_fan]
pin: P2.2

[filament_switch_sensor e0_sensor]
switch_pin: P1.26

####################################################################################

[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1769_2160000AA99869AFFB14425EC42000F5-if00
restart_method: command

[static_digital_output tmc_standby_pins]
pins: !P3.26, !P3.25, !P1.18, !P1.19, !P2.13

[board_pins]
aliases:
    # EXP1 header
    EXP1_1=P2.8,  EXP1_3=P0.19, EXP1_5=P0.20, EXP1_7=P0.17, EXP1_9=<GND>,
    EXP1_2=P0.16, EXP1_4=<RST>, EXP1_6=P0.15, EXP1_8=P0.18, EXP1_10=<5V>

[display]
lcd_type: st7920
cs_pin: P0.17
sclk_pin: P0.15
sid_pin: P0.18
encoder_pins: ^P0.20, ^P0.19
click_pin: ^!P0.16

[neopixel my_neopixel]
pin: P1.24                                    #   The pin connected to the neopixel. This parameter must be provided.
chain_count: 16                               #   The number of Neopixel chips that are "daisy chained" to the provided pin. The default is 1 (which indicates only a single Neopixel is connected to the pin).
color_order: RGBW                             #   Set the pixel order required by the LED hardware. Options are GRB,RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 1                              #   Sets the initial LED color of the Neopixel. Each value should be between 0.0 and 1.0. The WHITE option is only available on RGBW LEDs. The default for each color is 0.0

[input_shaper]
#shaper_freq_x: 72.727272
#shaper_freq_y: 37.037037
#shaper_type: mzv

#######################################################################
#######################  OUTPUT PINS  #################################
#######################################################################

[output_pin beeper]
pin: EXP1_1

[display_status]

[virtual_sdcard]
path: ~/gcode_files

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

#[temperature_sensor mcu]
#sensor_type: temperature_host
#min_temp: 10
#max_temp: 100

#######################################################################
#######################  MACROS  ######################################
#######################################################################

[gcode_macro START_PRINT]
#default_parameter_EXTRUDER_TEMP: 150
#default_parameter_BED_TEMP: 50
gcode:
  G21                     #metric values
  M220 S100               #Reset feedrate
  M221 S100               #Reset Flowrate
    {% if not params.PA %}
			{% set PA = printer.configfile.settings.extruder.pressure_advance %}
	  {% endif %}
  
  # Start bed heating
  G90                     # absolute positioning
  M140 S{BED_TEMP}        # starts heating the bed
  SET_GCODE_OFFSET Z=0.0  # reset any babystepping to 0
  {% if printer.homed_axes != 'XYZ' %}
	  G28			#Home All Axes
	{% endif %}

  SET_PRESSURE_ADVANCE ADVANCE={PA}

  M117 Heating...
  G0 X10 Y10 Z5 F3000     # Move the nozzle near the bed
  G0 Z0.28 F300           # Move the nozzle very close to the bed 
  M190 S{params.BED_TEMP|default(printer.heater_bed.target, true) } # Wait for bed to reach temperature
  M109 S{params.EXTRUDER_TEMP|default(printer.extruder.target, true) }        # Wait for extruder to reach temp. Allows the bed heat to stabilize.
  BED_MESH_PROFILE LOAD=default        # Import Bed Mesh Compensation
  #G28 Z                                # Home Z again as Z will have changed after tilt adjustment and bed heating.

  # Draw Purge Line
  M117 Printing...
  G92 E0                              # Reset Extruder
  G1 Z2.0 F3000                       # Move Z Axis up
  G1 X4.1 Y20 Z0.28 F5000.0           # Move to start position
  G0 X4.1 Y200.0 Z0.28 F1500.0 E30    # Draw the first line
  G0 X4.4 Y200.0 Z0.28 F5000.0        # Move to side a little
  G0 X4.4 Y20 Z0.28 F1500.0 E30       # Draw the second line
  G1 X1.0 Y20 Z0.24 F5000             # Move quickly to prevent ooze
  G92 E0                              # Reset Extruder
  G1 Z2.0 F3000                       # Move Z Axis up

[gcode_macro END_PRINT]
gcode:
  SAVE_GCODE_STATE NAME=end_print_state
  M104 S0              #extruder heater off
  M140 S0              #heated bed heater off
  G91                  #relative positioning
  G1 Z10 E-2 F3600     #retract the filament a bit before lifting the nozzle.
  G1 E-2 F3600         #retract filament even more
  G90                  #absolute positioning
  {% set axismax = printer.toolhead.axis_maximum %}
		{% set pos     = printer.toolhead.position     %}
	
		#Move toolhead away from finished print
		{% if pos.z <= ( axismax.z - 40 ) %}
			G0 X250 Y250 Z{ pos.z + 40 }
		{% else %}
			G0 X250 Y250 Z{ axismax.z }
		{% endif %}

  #G0 X{printer.toolhead.axis_maximum.x / 2} Y{printer.toolhead.axis_maximum.y} ; Park in the back
  M84                  #steppers off
  M107                 #part cooling fan off
  M117 Print Completed.
  RESTORE_GCODE_STATE NAME=end_print_state

[pause_resume]

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME
    
[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  G28 X Y
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  BASE_CANCEL_PRINT

[gcode_macro FILAMENT_CHANGE]
#default_parameter_X: 20
#default_parameter_Y: 340
#default_parameter_Z: 20
#default_parameter_E: 570
gcode:
  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE_PARK X{X} Y{Y} Z{Z}
    M702 U{E}
  {% endif %}

[gcode_macro LOAD_FILAMENT]
#default_parameter_I: 30
#default_parameter_U: 570
#default_parameter_P: 30
#default_parameter_IF: 180
#default_parameter_UF: 360
#default_parameter_PF: 180
gcode:
  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M701_state
    M83
    {% if I|int > 0 %}
      G1 E{I} F{IF}
    {% endif %}
    G1 E{U} F{UF}
    {% if P|int > 0 %}
      G1 E{P} F{PF}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M701_state MOVE=0
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
#default_parameter_P: 8
#default_parameter_I: 30
#default_parameter_U: 570
#default_parameter_PF: 180
#default_parameter_IF: 180
#default_parameter_UF: 360
gcode:
  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M702_state
    M83
    {% if P|int > 0 %}
      G1 E{P} F{PF}
    {% endif %}
    {% if I|int > 0 %}
      G1 E-{I} F{IF}
    {% endif %}
    G1 E-{U} F{UF}
    RESTORE_GCODE_STATE NAME=M702_state MOVE=0
  {% endif %}

[gcode_macro G29]
gcode:
    G28
    G1 Z10 F600
    BED_MESH_CALIBRATE
    G1 X0 Y0 Z5 F4000
    SAVE_CONFIG

[gcode_macro LINEAR_ADVANCE]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={E} ADVANCE={K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={K}
    {% endif %}
  {% endif %}

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z10
    G90
    G1 X260 Y260 F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro POWEROFF]
gcode:
  RESPOND TYPE=command MSG=action:poweroff

####################################################

#[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
 {action_call_remote_method("timelapse_newframe")}

[gcode_macro TIMELAPSE_RENDER]
gcode:
 {action_call_remote_method("timelapse_render")}

####################################

[gcode_macro TEST_RESONANCES_X]
gcode:
 TEST_RESONANCES AXIS=X

[gcode_macro TEST_RESONANCES_Y]
gcode:
 TEST_RESONANCES AXIS=Y

#[gcode_arcs]
#resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

#######################################################################
#######################  Raspberry Pi MCU  ############################
#######################################################################

# This file contains an example configuration with RPi as secondary mcu

# See docs/Config_Reference.md for a description of parameters.

# The rpi microcontroller is used as secondary.
# Typically, both the X and Y axes
# are connected to the main micro-controller. The rpi microcontroller is used
# on non time-critical functions such as enclosure sensors, additional fan or
# light sources

[mcu host]
serial: /tmp/klipper_host_mcu

# Example1: A led strip controlled by the GPIO20 on the RPi
#[output_pin caselight]
#pin: host:gpio20
# You can also write the pin in extended form by specifying
# the reference gpiochip.
#pin: host:gpiochip0/gpio20

#[gcode_macro TOGGLE_CASELIGHT]
#gcode:
  #SET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}


# Example2: Using the i2c bus of the RPi to read a sensor
#[temperature_sensor enclosure_temp]
#sensor_type: HTU21D
#i2c_mcu: host
#i2c_bus: i2c.1
#htu21d_hold_master: False

#[gcode_macro QUERY_ENCLOSURE]
#gcode:
    #{% set sensor = printer["htu21d enclosure_temp"] %}
    #{action_respond_info(
        #"Temperature: %.2f C\n"
        #"Humidity: %.2f%%" % (
            #sensor.temperature,
            #sensor.humidity))}

# Example 3:Using a pin on another gpiochip connected to the RPi
# (in this case on an MCP23017)
#[fan]
#pin: host:gpiochip2/gpio7

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
    #113,113,20  # Center of heatbed to run resonance test


#######################################################################
#######################################################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 19.743
#*# pid_ki = 0.761
#*# pid_kd = 128.082
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 63.821
#*# pid_ki = 0.510
#*# pid_kd = 1998.395
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	0.165000, 0.050000, 0.045000, 0.057500, 0.022500
#*# 	0.137500, 0.075000, 0.040000, 0.035000, -0.017500
#*# 	0.185000, 0.072500, -0.037500, 0.000000, -0.035000
#*# 	0.147500, 0.082500, 0.017500, 0.042500, 0.022500
#*# 	0.227500, 0.137500, 0.105000, 0.127500, 0.040000
#*# tension = 0.2
#*# min_x = 29.995
#*# algo = bicubic
#*# y_count = 5
#*# mesh_y_pps = 2
#*# min_y = 10.0
#*# x_count = 5
#*# max_y = 230.0
#*# mesh_x_pps = 2
#*# max_x = 230.005
#*#
#*# [bltouch]
#*# z_offset = 2.700
